name: Build

on:  workflow_dispatch

jobs:
  build_win:
    # if: ${{ false }}
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          toolset: 14.0
          sdk: 10.0.17763.0


      - name: "Cache LuaVM"
        id: cache-luavm
        uses: actions/cache@v3
        with:
          path: ~/AppData/Local/LuaVM
          key: ${{ runner.os }}-luavm-
          restore-keys: |
            ${{ runner.os }}-luavm-

      - name: "Install LuaVM"
        if: steps.cache-luavm.outputs.cache-hit != 'true'
        run: |
          $ErrorActionPreference = "Stop"
          
          Invoke-WebRequest -OutFile LuaVM-0.5.4-vs2015-x64.exe https://github.com/xpol/luavm/releases/download/0.5.4/LuaVM-0.5.4-vs2015-x64.exe
          echo "Installing LuaVM"
          Start-Process ./LuaVM-0.5.4-vs2015-x64.exe -argumentlist "/verysilent" -Wait 
          echo "Install Finished"


      - name: "Setup LuaVM"    
        run: |
          $env:Path += ";" + $env:LOCALAPPDATA + "\LuaVM;" + $env:LOCALAPPDATA + "\LuaVM\externals\bin;" + $env:LOCALAPPDATA + "\LuaVM\versions\5.3" 
          luavm use 5.4 
          lua -v
          echo $env:LOCALAPPDATA"\LuaVM;"$env:LOCALAPPDATA"\LuaVM\externals\bin;"$env:LOCALAPPDATA"\LuaVM\versions\5.3" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append


      - name: "Copy Libs"
        run: |
          $ErrorActionPreference = "Stop" 

          Copy-Item externals/bin/* -Destination $env:LOCALAPPDATA"\LuaVM\externals\bin" -Recurse -Force
          Copy-Item externals/lib/win/*.lib -Destination $env:LOCALAPPDATA"\LuaVM\externals\lib" -Recurse -Force
          Copy-Item externals/include/* -Destination $env:LOCALAPPDATA"\LuaVM\externals\include" -Recurse -Force

      # - name: Build lanes
      #   run: |
      #     luarocks install lanes

      # - name: Setup Sccache
      #   run: |
      #     scoop install sccache

      # - name: "Cache wxwidgets"
      #   id: cache-wxwidgets
      #   uses: actions/cache@v3
      #   with:
      #     path: wxWidgets
      #     key: ${{ runner.os }}-wxwidgets-
      #     restore-keys: |
      #       ${{ runner.os }}-wxwidgets-

      # - name: "Build wxWidgets"
      #   if: steps.cache-wxwidgets.outputs.cache-hit != 'true'
      #   run: |
      #     Invoke-WebRequest -OutFile wxWidgets-3.1.6.zip https://github.com/wxWidgets/wxWidgets/releases/download/v3.1.6/wxWidgets-3.1.6.zip
      #     7z x -owxWidgets wxWidgets-3.1.6.zip
      #     cd wxWidgets/build/msw/
      #     nmake -f makefile.vc SHARED=0 UNICODE=1 BUILD=release TARGET_CPU=AMD64

      # - name: "Cache wxlua"
      #   id: cache-wxlua
      #   uses: actions/cache@v3
      #   with:
      #     path: wxlua
      #     key: ${{ runner.os }}-wxlua-
      #     restore-keys: |
      #       ${{ runner.os }}-wxlua-


      # - name: "Build wxlua"
      #   if: steps.cache-wxlua.outputs.cache-hit != 'true'
      #   run: |
      #     git clone https://github.com/pkulchenko/wxlua
      #     patch wxlua/wxlua/modules/luamodule/luamodule.cpp patches/wxlua.patch --binary
      #     mkdir wxlua/wxlua/wxlua-build
      #     pushd .
      #     cd wxlua/wxlua/wxlua-build
      #     cmake .. -DCMAKE_BUILD_TYPE=Release  -DwxWidgets_ROOT_DIR="$env:GITHUB_WORKSPACE"/wxWidgets/ -DwxLua_LUA_LIBRARY_USE_BUILTIN=false -DwxLua_LUA_INCLUDE_DIR="$env:LOCALAPPDATA"\LUAVM\versions\5.3\include -DwxLua_LUA_LIBRARY="$env:LOCALAPPDATA"\LUAVM\versions\5.3\lua53.lib
      #     cmake --build . --config Release
      #     popd



      # - name: "Copy wxLua"   
      #   run: |
      #     cp wxlua/wxlua/wxlua-build/bin/Release/wx.dll $env:LOCALAPPDATA"\LuaVM\versions\5.3\cmod"
      #     mkdir tests/wxlua
      #     mkdir docs/wxlua
      #     cp -r wxlua/wxlua/samples/* tests/wxlua
      #     cp -r wxlua/wxlua/docs/* docs/wxlua

      - name: "Build LuaSocket"
        run: |
          luarocks unpack luasocket
          pushd .
          cd luasocket-3.1.0-1/luasocket
          luarocks make luasocket-3.1.0-1.rockspec 
          popd
          mkdir docs/luasocket
          cp -r luasocket-3.1.0-1/luasocket/docs/* docs/luasocket
          cp -r luasocket-3.1.0-1/luasocket/README.md docs/luasocket
          cp -r luasocket-3.1.0-1/luasocket/LICENSE docs/luasocket


      - name: "Build losc"
        run: |
          luarocks unpack losc
          pushd .
          cd losc-1.0.1-1/losc
          luarocks make losc-1.0.1-1.rockspec
          popd
          mkdir docs/losc
          cp -r losc-1.0.1-1/losc/README.md docs/losc
          cp -r losc-1.0.1-1/losc/LICENSE docs/losc

      - name: "Build timerwheel"
        run: |
          luarocks unpack timerwheel
          pushd .
          cd timerwheel-1.0.2-1/timerwheel.lua/
          luarocks make timerwheel-1.0.2-1.rockspec
          popd
          mkdir docs/timerwheel
          cp -r timerwheel-1.0.2-1/timerwheel.lua/docs/*  docs/timerwheel
          cp -r timerwheel-1.0.2-1/timerwheel.lua/README.md  docs/timerwheel
          cp -r timerwheel-1.0.2-1/timerwheel.lua/LICENSE  docs/timerwheel

      - name: "Build binaryheap"
        run: |
          luarocks unpack binaryheap
          pushd .
          cd binaryheap-0.4-1/binaryheap.lua-version_0v4
          luarocks make binaryheap-0.4-1.rockspec
          popd
          mkdir docs/binaryheap
          cp -r binaryheap-0.4-1/binaryheap.lua-version_0v4/docs/*  docs/binaryheap
          cp -r binaryheap-0.4-1/binaryheap.lua-version_0v4/README.md  docs/binaryheap
          Invoke-WebRequest  https://raw.githubusercontent.com/Tieske/binaryheap.lua/master/LICENSE   -OutFile  docs/binaryheap/LICENSE

      - name: "Build luafilesystem"
        run: |
          luarocks unpack luafilesystem
          pushd .
          cd luafilesystem-1.8.0-1/luafilesystem
          luarocks make luafilesystem-1.8.0-1.rockspec
          popd
          mkdir docs/luafilesystem
          cp -r luafilesystem-1.8.0-1/luafilesystem/doc/us/*  docs/luafilesystem
          cp -r luafilesystem-1.8.0-1/luafilesystem/README.md  docs/luafilesystem
          cp -r luafilesystem-1.8.0-1/luafilesystem/LICENSE  docs/luafilesystem

      - name: "Build copas"
        run: |
          luarocks unpack copas
          pushd .
          cd copas-4.7.0-1/copas
          luarocks make copas-4.7.0-1.rockspec
          popd
          mkdir docs/copas
          cp -r copas-4.7.0-1/copas/docs/* docs/copas 
          cp -r copas-4.7.0-1/copas/LICENSE docs/copas
          cp -r copas-4.7.0-1/copas/README.md docs/copas

      - name: "Build coxpcall"
        run: |
          luarocks install coxpcall
          
      - name: "Build CopasTimer"
        run: |
          luarocks install CopasTimer

      - name: "Build lub"
        run: |
          luarocks install lub

      - name: "Build vstruct"
        run: |
          luarocks unpack vstruct
          pushd .
          cd vstruct-2.1.1-1/vstruct
          luarocks make vstruct-2.1.1-1.rockspec
          popd
          mkdir docs/vstruct
          cp -r vstruct-2.1.1-1/vstruct/README.md docs/vstruct

      - name: "Build lbase64"
        run: |
          luarocks unpack lbase64
          pushd .
          cd lbase64-20120807-3/base64
          luarocks make lbase64-20120807-3.rockspec
          popd
          mkdir docs/lbase64
          cp -r lbase64-20120807-3/base64/README docs/lbase64

      - name: "Build librs232"
        run: |
          luarocks unpack rs232
          pushd .
          cd rs232-0.1.0-1/librs232-0.1.0
          luarocks make rs232-0.1.0-1.rockspec
          popd
          mkdir docs/librs232
          cp -r rs232-0.1.0-1/librs232-0.1.0/doc/* docs/librs232
          cp -r rs232-0.1.0-1/librs232-0.1.0/README.md docs/librs232

      - name: "Build rings"
        run: |
          luarocks unpack rings
          pushd .
          cd rings-1.3.0-1/rings-v_1_3_0
          luarocks make rings-1.3.0-1.rockspec
          popd
          mkdir docs/rings
          cp -r rings-1.3.0-1/rings-v_1_3_0/doc/* docs/rings
          cp -r rings-1.3.0-1/rings-v_1_3_0/README docs/rings

      - name: "Build lua-curl"
        run: |
          luarocks unpack lua-curl 
          pushd .
          cd lua-curl-0.3.13-1/Lua-cURLv3-0.3.13
          luarocks make lua-curl-0.3.13-1.rockspec  CC="CL -DCURL_STATICLIB" LD="link wldap32.lib zlibstatic.lib"
          popd
          mkdir docs/lua-curl
          cp -r lua-curl-0.3.13-1/Lua-cURLv3-0.3.13/doc/* docs/lua-curl
          cp -r lua-curl-0.3.13-1/Lua-cURLv3-0.3.13/README.md docs/lua-curl
          cp -r lua-curl-0.3.13-1/Lua-cURLv3-0.3.13/LICENSE docs/lua-curl

      - name: "Build luafft"
        run: |
          luarocks unpack rockspecs/luafft-1.2-1.rockspec
          pushd .
          cd luafft-1.2-1/luafft
          luarocks make ../../rockspecs/luafft-1.2-1.rockspec
          popd
          mkdir docs/luafft
          cp -r luafft-1.2-1/luafft/docs/* docs/luafft
          cp -r luafft-1.2-1/luafft/README.md docs/luafft

      - name: "Build luatz"
        run: |
          luarocks unpack luatz
          pushd .
          cd luatz-0.4-1/luatz-0.4
          luarocks make luatz-0.4-1.rockspec
          popd
          mkdir docs/luatz
          cp -r luatz-0.4-1/luatz-0.4/doc/* docs/luatz
          cp -r luatz-0.4-1/luatz-0.4/README.md docs/luatz

      - name: "Build middleclass"
        run: |
          luarocks unpack middleclass
          pushd .
          cd middleclass-4.1.1-0/middleclass-4.1.1
          luarocks make middleclass-4.1.1-0.rockspec
          popd
          mkdir docs/middleclass
          cp -r middleclass-4.1.1-0/middleclass-4.1.1/MIT-LICENSE.txt docs/middleclass
          cp -r middleclass-4.1.1-0/middleclass-4.1.1/README.md docs/middleclass

      - name: "Build lustache"
        run: |
          luarocks unpack lustache
          pushd .
          cd lustache-1.3.1-0/lustache-1.3.1-0
          luarocks make lustache-1.3.1-0.rockspec
          popd
          mkdir docs/lustache
          cp -r lustache-1.3.1-0/lustache-1.3.1-0/LICENSE docs/lustache
          cp -r lustache-1.3.1-0/lustache-1.3.1-0/README.md docs/lustache

      - name: "Build moses"
        run: |
          luarocks unpack moses
          pushd .
          cd moses-2.1.0-1/Moses-Moses-2.1.0-1
          luarocks make moses-2.1.0-1.rockspec
          popd
          mkdir docs/moses
          cp -r moses-2.1.0-1/Moses-Moses-2.1.0-1/doc/* docs/moses
          cp -r moses-2.1.0-1/Moses-Moses-2.1.0-1/README.md docs/moses
          cp -r moses-2.1.0-1/Moses-Moses-2.1.0-1/LICENSE docs/moses

      - name: "Build luafun"
        run: |
          luarocks unpack rockspecs/fun-0.1.3-1.rockspec
          pushd .
          cd fun-0.1.3-1/luafun
          luarocks make ../../rockspecs/fun-0.1.3-1.rockspec
          popd
          mkdir docs/fun
          cp -r fun-0.1.3-1/luafun/doc/* docs/fun
          cp -r fun-0.1.3-1/luafun/README.md docs/fun

      - name: "Build MD5"
        run: |
          luarocks unpack MD5
          pushd .
          cd md5-1.3-1/md5-1.3
          luarocks make md5-1.3-1.rockspec
          popd
          mkdir docs/MD5
          cp -r md5-1.3-1/md5-1.3/doc/* docs/MD5
          cp -r md5-1.3-1/md5-1.3/README.md docs/MD5

      - name: "Build xavante"
        run: |
          luarocks unpack xavante
          pushd .
          cd xavante-2.4.0-1/xavante-2.4.0
          luarocks make xavante-2.4.0-1.rockspec
          popd
          mkdir docs/xavante
          cp -r xavante-2.4.0-1/xavante-2.4.0/doc/* docs/xavante
          cp -r xavante-2.4.0-1/xavante-2.4.0/README.md docs/xavante

      - name: "Build lyaml"
        run: |
          luarocks unpack rockspecs/lyaml-6.2.8-1.rockspec
          pushd .
          cd lyaml-6.2.8-1/lyaml-6.2.8
          luarocks make ../../rockspecs/lyaml-6.2.8-1.rockspec
          popd
          mkdir docs/lyaml
          cp -r lyaml-6.2.8-1/lyaml-6.2.8/doc/* docs/lyaml
          cp -r lyaml-6.2.8-1/lyaml-6.2.8/README.md docs/lyaml
          cp -r lyaml-6.2.8-1/lyaml-6.2.8/LICENSE docs/lyaml


      - name: "Build lua-protobuf"
        run: |
          luarocks unpack lua-protobuf
          pushd .
          cd lua-protobuf-0.4.2-1/lua-protobuf
          luarocks make lua-protobuf-0.4.2-1.rockspec
          popd
          mkdir docs/lua-protobuf
          cp -r lua-protobuf-0.4.2-1/lua-protobuf/LICENSE docs/lua-protobuf
          cp -r lua-protobuf-0.4.2-1/lua-protobuf/README.md docs/lua-protobuf


      - name: "Build luasql-mysql"
        run: |
          luarocks unpack rockspecs/luasql-mysql-2.6.0-1.rockspec
          patch luasql-mysql-2.6.0-1/luasql/src/luasql.h  patches/luasql-mysql.patch --binary
          pushd .
          cd luasql-mysql-2.6.0-1/luasql
          luarocks make ../../rockspecs/luasql-mysql-2.6.0-1.rockspec
          popd
          mkdir docs/luasql-mysql
          cp -r luasql-mysql-2.6.0-1/luasql/doc/* docs/luasql-mysql
          cp -r luasql-mysql-2.6.0-1/luasql/README docs/luasql-mysql


      - name: "Build luasql-firebird"
        run: |
          luarocks unpack rockspecs/luasql-firebird-2.6.0-1.rockspec
          pushd .
          cd luasql-firebird-2.6.0-1/luasql
          luarocks make ../../rockspecs/luasql-firebird-2.6.0-1.rockspec
          popd
          mkdir docs/luasql-firebird
          cp -r luasql-firebird-2.6.0-1/luasql/doc/* docs/luasql-firebird
          cp -r luasql-firebird-2.6.0-1/luasql/README docs/luasql-firebird

      - name: "Build luasql-postgres"
        run: |
          luarocks unpack rockspecs/luasql-postgres-2.6.0-1.rockspec
          pushd .
          cd luasql-postgres-2.6.0-1/luasql
          luarocks make ../../rockspecs/luasql-postgres-2.6.0-1.rockspec
          popd
          mkdir docs/luasql-postgres
          cp -r luasql-postgres-2.6.0-1/luasql/doc/* docs/luasql-postgres
          cp -r luasql-postgres-2.6.0-1/luasql/README docs/luasql-postgres

      - name: "Build luasql-sqlite3"
        run: |
          luarocks unpack rockspecs/luasql-sqlite3-2.6.0-1.rockspec
          pushd .
          cd luasql-sqlite3-2.6.0-1/luasql
          luarocks make ../../rockspecs/luasql-sqlite3-2.6.0-1.rockspec
          popd
          mkdir docs/luasql-sqlite3
          cp -r luasql-sqlite3-2.6.0-1/luasql/doc/* docs/luasql-sqlite3
          cp -r luasql-sqlite3-2.6.0-1/luasql/README docs/luasql-sqlite3

      - name: "Build luasql-odbc"
        run: |
          luarocks unpack rockspecs/luasql-odbc-2.6.0-1.rockspec
          pushd .
          cd luasql-odbc-2.6.0-1/luasql
          luarocks make ../../rockspecs/luasql-odbc-2.6.0-1.rockspec
          popd
          mkdir docs/luasql-odbc
          cp -r luasql-odbc-2.6.0-1/luasql/doc/* docs/luasql-odbc
          cp -r luasql-odbc-2.6.0-1/luasql/README docs/luasql-odbc

      - name: "Build lrexlib-pcre"
        run: |
          luarocks unpack lrexlib-pcre 
          pushd .
          cd lrexlib-pcre-2.9.1-1/lrexlib
          luarocks make lrexlib-pcre-2.9.1-1.rockspec CC="CL -DPCRE_STATIC"
          popd
          mkdir docs/lrexlib-pcre
          cp -r lrexlib-pcre-2.9.1-1/lrexlib/doc/* docs/lrexlib-pcre
          cp -r lrexlib-pcre-2.9.1-1/lrexlib/README.rst docs/lrexlib-pcre
          cp -r lrexlib-pcre-2.9.1-1/lrexlib/LICENSE docs/lrexlib-pcre

      - name: "Build stdlib"
        run: |
          luarocks unpack stdlib
          pushd .
          cd stdlib-41.2.2-1/lua-stdlib-release-v41.2.2
          luarocks make stdlib-41.2.2-1.rockspec
          popd
          mkdir docs/stdlib
          cp -r stdlib-41.2.2-1/lua-stdlib-release-v41.2.2/doc/* docs/stdlib
          cp -r stdlib-41.2.2-1/lua-stdlib-release-v41.2.2/README docs/stdlib

      # - name: "Build luaexpat"
      #   run: |
      #     git clone https://github.com/lunarmodules/luaexpat
      #     pushd .
      #     cd luaexpat
      #     git checkout dtdbuild
      #     cp rockspecs/luaexpat-1.5.1-1.rockspec luaexpat-1.5.1-1.rockspec
      #     patch -p1 -i ../patches/luaexpat.patch 
      #     luarocks make rockspecs/luaexpat-1.5.1-1.rockspec CC="gcc -DLUAEXPAT_SKIP_EXPAT_CONFIG"
      #     popd
      #     mkdir docs/luaexpat
      #     cp -r luaexpat/docs/* docs/luaexpat
      #     cp -r luaexpat/README.md docs/luaexpat
      #     cp -r luaexpat/LICENSE docs/luaexpat



      # - name: "Build luaexpat"
      #   run: |
      #     luarocks unpack luaexpat
      #     pushd .
      #     cd luaexpat-1.5.1-1/luaexpat
      #     patch -p1 -i ../../patches/luaexpat.patch --binary
      #     luarocks make ./luaexpat-1.5.1-1.rockspec CC="gcc -DLUAEXPAT_SKIP_DTD_SUPPORT -DXML_DTD"
      #     popd
      #     mkdir docs/luaexpat
      #     cp -r luaexpat-1.5.1-1/luaexpat/docs/* docs/luaexpat
      #     cp -r luaexpat-1.5.1-1/luaexpat/README.md docs/luaexpat
      #     cp -r luaexpat-1.5.1-1/luaexpat/LICENSE docs/luaexpat


      - name: "Build luasec"
        run: |
          luarocks unpack rockspecs/luasec-1.3.1-1.rockspec 
          pushd .
          cd luasec-1.3.1-1/luasec
          luarocks make ../../rockspecs/luasec-1.3.1-1.rockspec 
          popd
          mkdir docs/luasec
          cp -r luasec-1.3.1-1/luasec/samples/* docs/luasec
          cp -r luasec-1.3.1-1/luasec/README.md docs/luasec
          cp -r luasec-1.3.1-1/luasec/LICENSE docs/luasec

      - name: "Build Lua-Zip"
        run: |
          luarocks unpack rockspecs/lua-zip-0.2-0.rockspec 
          pushd .
          cd lua-zip-0.2-0/lua-zip
          luarocks make ../../rockspecs/lua-zip-0.2-0.rockspec 
          popd
          mkdir docs/lua-zip
          cp -r lua-zip-0.2-0/lua-zip/README.txt docs/lua-zip

      - name: "Build Lpeg"
        run: |
          luarocks install lpeg

      - name: "Build Lua-cjson"
        run: |
          git clone https://github.com/mpx/lua-cjson
          patch lua-cjson/lua_cjson.c  patches/lua-cjson.patch --binary
          pushd .
          cd lua-cjson
          luarocks make
          popd

      - name: "Build Penlight"
        run: |
          luarocks unpack penlight
          pushd .
          cd penlight-1.13.1-1/penlight
          luarocks make penlight-1.13.1-1.rockspec 
          popd
          mkdir docs/penlight
          cp -r penlight-1.13.1-1/penlight/docs/* docs/penlight
          cp -r penlight-1.13.1-1/penlight/README.md docs/penlight
          cp -r penlight-1.13.1-1/penlight/LICENSE.md docs/penlight

      - name: "Build Lua-Zlib"
        run: |
          luarocks unpack rockspecs/lua-zlib-1.2-2.rockspec 
          pushd .
          cd lua-zlib-1.2-2/lua-zlib
          luarocks make ../../rockspecs/lua-zlib-1.2-2.rockspec
          popd
          mkdir docs/lua-zlib
          cp -r lua-zlib-1.2-2/lua-zlib/README docs/lua-zlib

      - name: "Build ZipWriter"
        run: |
          luarocks unpack ZipWriter
          pushd .
          cd zipwriter-0.1.5-1/ZipWriter-0.1.5
          luarocks make zipwriter-0.1.5-1.rockspec
          popd
          mkdir docs/zipwriter
          cp -r zipwriter-0.1.5-1/ZipWriter-0.1.5/doc/* docs/zipwriter
          cp -r zipwriter-0.1.5-1/ZipWriter-0.1.5/README.md docs/zipwriter
          cp -r zipwriter-0.1.5-1/ZipWriter-0.1.5/LICENCE.txt docs/zipwriter
          "NoIndex: true`n" + (Get-Content docs/zipwriter/APPNOTE.TXT | Out-String) | Set-Content docs/zipwriter/APPNOTE.TXT

      - name: "Build dkjson"
        run: |
          luarocks unpack dkjson
          pushd .
          cd dkjson-2.6-1/dkjson-2.6
          luarocks make dkjson-2.6-1.rockspec 
          popd
          mkdir docs/dkjson
          cp -r dkjson-2.6-1/dkjson-2.6/README.txt docs/dkjson

      - name: "Build lxsh"
        run: |
          luarocks unpack lxsh
          pushd .
          cd lxsh-0.8.6-2/lxsh-0.8.6-1
          luarocks make lxsh-0.8.6-2.rockspec 
          popd
          mkdir docs/lxsh
          cp -r lxsh-0.8.6-2/lxsh-0.8.6-1/etc docs/lxsh
          cp -r lxsh-0.8.6-2/lxsh-0.8.6-1/README.md docs/lxsh
          cp -r lxsh-0.8.6-2/lxsh-0.8.6-1/examples docs/lxsh

      - name: "Build serpent"
        run: |
          luarocks unpack serpent
          pushd .
          cd serpent-0.30-2/serpent
          luarocks make  serpent-0.30-2.rockspec 
          popd
          mkdir docs/serpent
          cp -r serpent-0.30-2/serpent/README.md docs/serpent
          cp -r serpent-0.30-2/serpent/LICENSE docs/serpent

      - name: "Install LuaUnit"
        run: |
          luarocks install luaunit



      - name: "Collect files"
        if: always()
        run: |
          mkdir archive
          mkdir archive/bin
          mkdir archive/lua
          mkdir archive/docs
          mkdir archive/tests

          cp "batteries_header.lua" archive
          cp -r bin/*.DLL archive/bin
          cp -r lua/* archive/lua
          cp -r docs/* archive/docs
          cp -r  $env:LOCALAPPDATA"\LuaVM\versions\5.3\cmod\*" archive/bin
          cp -r   $env:LOCALAPPDATA"\LuaVM\versions\5.3\lua\*" archive/lua
          cp -r  tests/* archive/tests

          Remove-Item archive\lua\luarocks -Recurse

      - name: "Upload artifacts"
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Mavriq-Lua-Batteries
          path: archive



    # ----------------------------------------------------------------------------------------------------------------------
    # ----------------------------------------------------------------------------------------------------------------------

    #                                             mac

    # ----------------------------------------------------------------------------------------------------------------------
    # ----------------------------------------------------------------------------------------------------------------------

  build_mac:
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v3

      - name: "Install Packages"
        run: |
          brew install pkg-config
          brew install lua@5.3
          export PATH="/usr/local/opt/lua@5.3/bin:$PATH"
          export LDFLAGS="-L/usr/local/opt/lua@5.3/lib"
          export CPPFLAGS="-I/usr/local/opt/lua@5.3/include"
          export CFLAGS="-I/usr/local/opt/lua@5.3/include"
          export PKG_CONFIG_PATH="/usr/local/opt/lua@5.3/lib/pkgconfig"
          wget https://luarocks.org/releases/luarocks-3.8.0.tar.gz
          tar -xvf luarocks-3.8.0.tar.gz
          cd luarocks-3.8.0
          ./configure --with-lua-include=/usr/local/opt/lua@5.3/include/lua5.3
          make 
          make install
          cd -
          # brew install openssl@3


      - name: "Copy Libs"
        run: |
          cp -R externals/include/* /usr/local/include
          sudo cp -R externals/lib/mac/*.a /usr/local/lib
          sudo cp -R externals/lib/mac/*.dylib /usr/local/lib


      # - name: "Cache wxwidgets"
      #   id: cache-wxwidgets
      #   uses: actions/cache@v3
      #   with:
      #     path: wxWidgets
      #     key: ${{ runner.os }}-wxwidgets-
      #     restore-keys: |
      #       ${{ runner.os }}-wxwidgets-

      # - name: "Build wxWidgets"
      #   if: steps.cache-wxwidgets.outputs.cache-hit != 'true'
      #   run: |
      #     wget https://github.com/wxWidgets/wxWidgets/releases/download/v3.1.7/wxWidgets-3.1.7.zip
      #     export MACOSX_DEPLOYMENT_TARGET=10.10
      #     unzip wxWidgets-3.1.7.zip -d wxWidgets
      #     mkdir wxWidgets/build-release
      #     cd wxWidgets/build-release
      #     # ../configure --enable-universal_binary=x86_64,arm64 --disable-shared --disable-sys-libs --disable-tests 
      #     cd ..
      #     make -j2
      #     cd -

      # - name: "Cache wxlua"
      #   id: cache-wxlua
      #   uses: actions/cache@v3
      #   with:
      #     path: wxlua
      #     key: ${{ runner.os }}-wxlua-
      #     restore-keys: |
      #       ${{ runner.os }}-wxlua-


      # - name: "Build wxlua"
      #   if: steps.cache-wxlua.outputs.cache-hit != 'true'
      #   run: |
      #     git clone https://github.com/pkulchenko/wxlua
      #     cd wxlua
      #     git checkout fix-wxbitmap
      #     cd ..
      #     # patch wxlua/wxlua/modules/luamodule/luamodule.cpp patches/wxlua.patch
      #     mkdir wxlua/wxlua/wxlua-build
      #     cd wxlua/wxlua/wxlua-build
      #     ls "${GITHUB_WORKSPACE}/wxWidgets/build-release/"
      #     cmake .. -Dwxlua_LUA_LIBRARY_USE_BUILTIN=FALSE -Dwxlua_LUA_LIBRARY_VERSION=5.3 -Dwxlua_LUA_INCLUDE_DIR=/usr/local/Cellar/lua@5.3/5.3.6/include/lua5.3 -Dwxlua_LUA_LIBRARY=/usr/local/lib/lua53.dylib -DwxWidgets_CONFIG_EXECUTABLE="${GITHUB_WORKSPACE}/wxWidgets/build-release/wx-config"
      #     cmake --build . --config Release
      #     cd -


      # - name: Copy wxLua   
      #   run: |
      #     cp wxlua/wxlua/wxlua-build/bin/Release/wx.dll $env:LOCALAPPDATA"\LuaVM\versions\5.3\cmod"
      #     mkdir tests/wxlua
      #     mkdir docs/wxlua
      #     cp -r wxlua/wxlua/samples/* tests/wxlua
      #     cp -r wxlua/wxlua/docs/* docs/wxlua



      - name: "Build LuaSocket"
        run: |
          luarocks install luasocket \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"

      - name: "Build losc"
        run: |
          luarocks install losc \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"

      - name: "Build timerwheel"
        run: |
          luarocks install timerwheel \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"

      - name: "Build binaryheap"
        run: |
          luarocks install binaryheap \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"

      - name: "build luafilesystem"
        run: |
          luarocks install luafilesystem \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"

      - name: "Build copas"
        run: |
          luarocks install copas \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"


      - name: "Build coxpcall"
        run: |
          luarocks install coxpcall \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"
          
      - name: "Build CopasTimer"
        run: |
          luarocks install CopasTimer \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"

      - name: "Build lub"
        run: |
          luarocks install lub \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"

      - name: "Build vstruct"
        run: |
          luarocks install vstruct \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"


      - name: "Build lbase64"
        run: |
          luarocks install lbase64 \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"


      - name: "Build librs232"
        run: |
          luarocks install rs232 \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"


      - name: "Build rings"
        run: |
          luarocks install rings  \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"


      - name: "Build lua-curl"
        run: |
          luarocks unpack lua-curl 
          cd lua-curl-0.3.13-1/Lua-cURLv3-0.3.13

          make \
          CFLAGS="-I/usr/local/opt/lua@5.3/include/lua -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LDFLAGS="-arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          CURL_LIBS="/usr/local/lib/libcurl.a /usr/local/lib/libzstd_static.a /usr/local/lib/libssl_static.a /usr/local/lib/libcrypto_static.a \
          /usr/local/lib/libz_static.a /usr/local/lib/libnghttp2_static.a /usr/local/lib/libbrotlidec-static.a /usr/local/lib/libbrotlicommon-static.a \
          /usr/local/lib/libpsl_static.a /usr/local/lib/libidn2_static.a /usr/local/lib/libunistring_static.a /usr/local/lib/libiconv_static.a" \
          -j2

          cp lcurl.so /usr/local/lib/lua/5.3/
          cd -


      - name: "Build luafft"
        run: |
          luarocks install luafft \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"

      - name: "Build luatz"
        run: |
          luarocks install luatz \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"

      - name: "Build middleclass"
        run: |
          luarocks install middleclass \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"

      - name: "Build lustache"
        run: |
          luarocks install lustache \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"

      - name: "Build moses"
        run: |
          luarocks install moses \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"

      - name: "Build luafun"
        run: |
          luarocks install fun \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"

      - name: "Build MD5"
        run: |
          luarocks install MD5 \
          CFLAGS="-O2 -Wall -fPIC -W -Waggregate-return -Wcast-align -Wmissing-prototypes -Wnested-externs -Wshadow -Wwrite-strings -pedantic \
          -I/usr/local/opt/lua@5.3/include/lua5.3  -arch arm64 -arch x86_64" MACOSX_DEPLOYMENT_TARGET=10.10  \
          LIBFLAG="-L/usr/local/lib -llua53 -bundle  -dynamic_lookup -arch arm64 -arch x86_64"



      - name: "Build xavante"
        run: |
          luarocks install xavante \
          CFLAGS="-O2 -Wall -fPIC -W -Waggregate-return -Wcast-align -Wmissing-prototypes -Wnested-externs -Wshadow -Wwrite-strings -pedantic \
          -I/usr/local/opt/lua@5.3/include/lua5.3  -arch arm64 -arch x86_64" MACOSX_DEPLOYMENT_TARGET=10.10  \
          LIBFLAG="-L/usr/local/lib -llua53 -bundle  -dynamic_lookup -arch arm64 -arch x86_64"

      - name: "Build lyaml"
        run: |
          luarocks unpack rockspecs/lyaml-6.2.8-1.rockspec
          pushd .
          cd lyaml-6.2.8-1/lyaml-6.2.8
          luarocks make ../../rockspecs/lyaml-6.2.8-1.rockspec \
          CFLAGS="-O2 -fPIC -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="/usr/local/lib/libyaml.a -bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10 "
      #   
      #   Need to fix luke file as per https://github.com/gvvaughan/lyaml/issues/30

      # - name: "Build lyaml"
      #   run: |
      #     luarocks unpack rockspecs/lyaml-6.2.8-1.rockspec
      #     pushd .
      #     cd lyaml-6.2.8-1/lyaml-6.2.8
      #     luarocks make ../../rockspecs/lyaml-6.2.8-1.rockspec
      #     popd
      #     mkdir docs/lyaml
      #     cp -r lyaml-6.2.8-1/lyaml-6.2.8/doc/* docs/lyaml
      #     cp -r lyaml-6.2.8-1/lyaml-6.2.8/README.md docs/lyaml
      #     cp -r lyaml-6.2.8-1/lyaml-6.2.8/LICENSE docs/lyaml

      - name: "Build lua-protobuf"
        run: |
           luarocks install lua-protobuf \
           CFLAGS="-arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
           LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10 "



      - name: Build luasql-mysql # Note 10.14 only as mysql requires may even require 11.0
        run: |
          luarocks install luasql-mysql \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10 /usr/local/lib/libmysqlclient.a \
          /usr/local/lib/libssl_static.a /usr/local/lib/libcrypto_static.a"

      # - name: "Build luasql-firebird"
      #   run: |
      #     luarocks install rockspecs/luasql-firebird-2.6.0-1.rockspec


      # - name: "Build luasql-postgres"
      #   run: |
      #     luarocks install rockspecs/luasql-postgres-2.6.0-1.rockspec


      - name: "Build luasql-sqlite3"
        run: |
          luarocks install luasql-sqlite3 \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="-bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10 /usr/local/lib/libsqlite3.a"


      - name: "Build lrexlib-pcre2"
        run: |
          luarocks install lrexlib-pcre2 \
          CFLAGS="-arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="/usr/local/lib/libpcre2-8.a -bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"


      - name: "Build stdlib"
        run: |
          luarocks install stdlib \
          CFLAGS="-O2 -Wall -fPIC -W -Waggregate-return -Wcast-align -Wmissing-prototypes -Wnested-externs -Wshadow -Wwrite-strings -pedantic \
          -I/usr/local/opt/lua@5.3/include/lua5.3  -arch arm64 -arch x86_64" MACOSX_DEPLOYMENT_TARGET=10.10  \
          LIBFLAG="-L/usr/local/lib -llua53 -bundle  -dynamic_lookup -arch arm64 -arch x86_64"


      # - name: "Build luaexpat"
      #   run: |
      #     git clone https://github.com/lunarmodules/luaexpat
      #     pushd .
      #     cd luaexpat
      #     git checkout dtdbuild
      #     luarocks install rockspecs/luaexpat-1.5.1-1.rockspec \
      #     CFLAGS=" -O2 -fPIC -arch arm64 -arch x86_64 -mmacosx-version-min=10.10 -DLUAEXPAT_SKIP_EXPAT_CONFIG" \
      #     LIBFLAG=" -bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10 -lexpat_static"


      - name: "Build luasec" 
        run: |
         luarocks unpack luasec
         cd luasec-1.3.1-1/luasec

         make macosx \
         CFLAGS="-O2 -fno-common -Wall -pedantic -arch arm64 -arch x86_64 -I. -I/usr/include -I/usr/local/include \
         -I/usr/local/Cellar/lua@5.3/5.3.6/include/lua5.3/ -DWITH_LUASOCKET -DLUASOCKET_DEBUG -mmacosx-version-min=10.10" \
         LDFLAGS="-bundle -undefined dynamic_lookup -arch arm64 -arch x86_64 -L./luasocket -L/usr/lib  -v" \
         LIBS="-lz_static -lssl_static -lcrypto_static -lluasocket" \
         -j2

         cp src/ssl.so /usr/local/lib/lua/5.3/
         cd -


      - name: "Build Lua-Zip"
        run: |
          # luarocks unpack rockspecs/lua-zip-0.2-0.rockspec
          luarocks unpack lua-zip
          mkdir lua-zip-0.2-0/lua-zip/build
          cd lua-zip-0.2-0/lua-zip/build

          cmake .. -DLUA_INCLUDE_DIR=/usr/local/Cellar/lua@5.3/5.3.6/include/lua5.3/ \
          -DLUA_LIBRARIES=/usr/local/Cellar/lua@5.3/5.3.6/lib/liblua.dylib \
          -DLIBZIP_LIBRARY=/usr/local/lib/libzip_static.a \
          -DCMAKE_MODULE_LINKER_FLAGS:STRING="-L/usr/local/lib -lzstd_static -lz_static -llua53 -lbz2_static -v" \
          -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=10.10

          cmake --build . --config=Release -j2
          mkdir /usr/local/lib/lua/5.3/brimworks
          cp brimworks/zip.so  /usr/local/lib/lua/5.3/brimworks
          cd -


      - name: "Build Lpeg"
        run: |
          luarocks install lpeg \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3 -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG=" -bundle -undefined dynamic_lookup -all_load -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"


      - name: "Build Lua-cjson" # not in luarocks
        run: |
          git clone https://github.com/mpx/lua-cjson 
          mkdir lua-cjson/build
          cd lua-cjson/build

          cmake .. -DLUA_INCLUDE_DIR=/usr/local/Cellar/lua@5.3/5.3.6/include/lua5.3/ \
          -DLUA_LIBRARIES=/usr/local/Cellar/lua@5.3/5.3.6/lib/liblua.dylib \
          -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" \
          -DCMAKE_OSX_DEPLOYMENT_TARGET:STRING=10.10

          cmake --build . --config=Release -j2
          cp cjson.so /usr/local/lib/lua/5.3/
          cd -


      - name: "Build Penlight"
        run: |
          luarocks install penlight \
          CFLAGS="-O2 -Wall -fPIC -W -Waggregate-return -Wcast-align -Wmissing-prototypes -Wnested-externs -Wshadow -Wwrite-strings -pedantic \
          -I/usr/local/opt/lua@5.3/include/lua5.3  -arch arm64 -arch x86_64" MACOSX_DEPLOYMENT_TARGET=10.10  \
          LIBFLAG="-L/usr/local/lib -llua53 -bundle  -dynamic_lookup -arch arm64 -arch x86_64"

      - name: "Build Lua-Zlib"
        run: |
          luarocks install lua-zlib \
          CFLAGS="-O2 -fPIC -I/usr/local/opt/lua@5.3/include/lua5.3  -arch arm64 -arch x86_64 -mmacosx-version-min=10.10" \
          LIBFLAG="/usr/local/lib/libz_static.a -bundle -undefined dynamic_lookup -all_load  -arch arm64 -arch x86_64 -mmacosx-version-min=10.10"

      - name: "Build ZipWriter"
        run: |
          luarocks install ZipWriter \
          CFLAGS="-O2 -Wall -fPIC -W -Waggregate-return -Wcast-align -Wmissing-prototypes -Wnested-externs -Wshadow -Wwrite-strings -pedantic \
          -I/usr/local/opt/lua@5.3/include/lua5.3  -arch arm64 -arch x86_64" MACOSX_DEPLOYMENT_TARGET=10.10  \
          LIBFLAG="-L/usr/local/lib -llua53 -bundle  -dynamic_lookup -arch arm64 -arch x86_64"

      - name: "Build dkjson"
        run: |
          luarocks install dkjson \
          CFLAGS="-O2 -Wall -fPIC -W -Waggregate-return -Wcast-align -Wmissing-prototypes -Wnested-externs -Wshadow -Wwrite-strings -pedantic \
          -I/usr/local/opt/lua@5.3/include/lua5.3  -arch arm64 -arch x86_64" MACOSX_DEPLOYMENT_TARGET=10.10  \
          LIBFLAG="-L/usr/local/lib -llua53 -bundle  -dynamic_lookup -arch arm64 -arch x86_64"

      - name: "Build lxsh"
        run: |
          luarocks install lxsh \
          CFLAGS="-O2 -Wall -fPIC -W -Waggregate-return -Wcast-align -Wmissing-prototypes -Wnested-externs -Wshadow -Wwrite-strings -pedantic \
          -I/usr/local/opt/lua@5.3/include/lua5.3  -arch arm64 -arch x86_64" MACOSX_DEPLOYMENT_TARGET=10.10  \
          LIBFLAG="-L/usr/local/lib -llua53 -bundle  -dynamic_lookup -arch arm64 -arch x86_64"

      - name: "Build serpent"
        run: |
          luarocks install serpent \
          CFLAGS="-O2 -Wall -fPIC -W -Waggregate-return -Wcast-align -Wmissing-prototypes -Wnested-externs -Wshadow -Wwrite-strings -pedantic \
          -I/usr/local/opt/lua@5.3/include/lua5.3  -arch arm64 -arch x86_64" MACOSX_DEPLOYMENT_TARGET=10.10  \
          LIBFLAG="-L/usr/local/lib -llua53 -bundle  -dynamic_lookup -arch arm64 -arch x86_64"

      - name: "Install LuaUnit"
        run: |
          luarocks install luaunit \
          CFLAGS="-O2 -Wall -fPIC -W -Waggregate-return -Wcast-align -Wmissing-prototypes -Wnested-externs -Wshadow -Wwrite-strings -pedantic \
          -I/usr/local/opt/lua@5.3/include/lua5.3  -arch arm64 -arch x86_64" MACOSX_DEPLOYMENT_TARGET=10.10  \
          LIBFLAG="-L/usr/local/lib -llua53 -bundle  -dynamic_lookup -arch arm64 -arch x86_64"









      - name: "Collect files"
        if: always()
        run: |
          mkdir archive
          mkdir archive/bin
          cp -r bin/*.dylib archive/bin
          cp -RvL /usr/local/lib/lua/5.3/* archive/bin
          cd archive
          find . -type f -name "*.so" -exec bash -c 'mv "$1" "${1%.so}".dylib' - '{}' \;
          pwd


      - name: "Codesign executable"
        env: 
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          APPLE_ID_HASH: ${{secrets.APPLE_ID_HASH}}
          APPLE_ID: ${{secrets.APPLE_ID}}
          APP_SECRET: ${{secrets.APP_SECRET}}
          TEAM_ID: ${{secrets.TEAM_ID}}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p build-password build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p build-password build.keychain
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k build-password build.keychain
          /usr/bin/codesign --force -s $APPLE_ID_HASH archive/bin/**/*.dylib -v
          /usr/bin/codesign --force -s $APPLE_ID_HASH archive/bin/*.dylib -v
          zip -r mavriq.zip archive/bin/ -x *.dll
          xcrun notarytool submit mavriq.zip --apple-id $APPLE_ID --password $APP_SECRET --team-id $TEAM_ID


      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Mavriq-Lua-Batteries
          path: archive

